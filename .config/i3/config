set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# Enable autotiling
# exec_always --no-startup-id autotiling

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# i3lock config
set $i3lockwall i3lock -i /home/cvai/Images/Wallpapers/wallpaper-png.png -t

# Setup wallpaper
exec --no-startup-id $HOME/.local/bin/setbg

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+Shift+d exec --no-startup-id dmenu_run -fn "Hack Nerd Font"
# start dmenu (with sudo)
bindsym $mod+Shift+Ctrl+d exec --no-startup-id $HOME/.local/bin/dmenu_run_sudo -fn "Hack Nerd Font"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -i -fn 'Hack Nerd Font'"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Ctrl+h split v

# split in vertical orientation
bindsym $mod+Ctrl+v split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Go back to previous workspace
workspace_auto_back_and_forth yes

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# Workspace assigns
# assign [class="firefox" instance="Navigator"] â†’ $ws1

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+Mod1+1 workspace number $ws11
bindsym $mod+Mod1+2 workspace number $ws12
bindsym $mod+Mod1+3 workspace number $ws13
bindsym $mod+Mod1+4 workspace number $ws14
bindsym $mod+Mod1+5 workspace number $ws15
bindsym $mod+Mod1+6 workspace number $ws16
bindsym $mod+Mod1+7 workspace number $ws17
bindsym $mod+Mod1+8 workspace number $ws18
bindsym $mod+Mod1+9 workspace number $ws19
bindsym $mod+Mod1+0 workspace number $ws20

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
# bindsym $mod+Mod1+Shift+1 move container to workspace number $ws11
# bindsym $mod+Mod1+Shift+2 move container to workspace number $ws12
# bindsym $mod+Mod1+Shift+3 move container to workspace number $ws13
# bindsym $mod+Mod1+Shift+4 move container to workspace number $ws14
# bindsym $mod+Mod1+Shift+5 move container to workspace number $ws15
# bindsym $mod+Mod1+Shift+6 move container to workspace number $ws16
# bindsym $mod+Mod1+Shift+7 move container to workspace number $ws17
# bindsym $mod+Mod1+Shift+8 move container to workspace number $ws18
# bindsym $mod+Mod1+Shift+9 move container to workspace number $ws19
# bindsym $mod+Mod1+Shift+0 move container to workspace number $ws20
bindsym $mod+Mod1+Shift+1 move container to workspace number $ws11
bindsym $mod+Mod1+Shift+2 move container to workspace number $ws12
bindsym $mod+Mod1+Shift+3 move container to workspace number $ws13
bindsym $mod+Mod1+Shift+4 move container to workspace number $ws14
bindsym $mod+Mod1+Shift+5 move container to workspace number $ws15
bindsym $mod+Mod1+Shift+6 move container to workspace number $ws16
bindsym $mod+Mod1+Shift+7 move container to workspace number $ws17
bindsym $mod+Mod1+Shift+8 move container to workspace number $ws18
bindsym $mod+Mod1+Shift+9 move container to workspace number $ws19
bindsym $mod+Mod1+Shift+0 move container to workspace number $ws20

# monitors
set $monitor_top HDMI-0
set $monitor_bottom eDP-1-1

# setup workspaces
workspace $ws1 output $monitor_bottom
workspace $ws2 output $monitor_bottom
workspace $ws3 output $monitor_bottom
workspace $ws4 output $monitor_bottom
workspace $ws5 output $monitor_bottom
workspace $ws6 output $monitor_bottom
workspace $ws7 output $monitor_bottom
workspace $ws8 output $monitor_bottom
workspace $ws9 output $monitor_bottom
workspace $ws10 output $monitor_bottom
workspace $ws11 output $monitor_top
workspace $ws12 output $monitor_top
workspace $ws13 output $monitor_top
workspace $ws14 output $monitor_top
workspace $ws15 output $monitor_top
workspace $ws16 output $monitor_top
workspace $ws17 output $monitor_top
workspace $ws18 output $monitor_top
workspace $ws19 output $monitor_top
workspace $ws20 output $monitor_top

# shutdown / restart / suspend...
# set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown
set $mode_system System (l) lock, (r) reboot, (CTRL+s) shutdown
mode "$mode_system" {
  bindsym l exec --no-startup-id $i3lockwall, mode "default"
  # bindsym e exec --no-startup-id i3-msg exit, mode "default"
  # bindsym s exec --no-startup-id $i3lockwall && systemctl suspend, mode "default"
  # bindsym h exec --no-startup-id $i3lockwall && systemctl hibernate, mode "default"
  bindsym r exec --no-startup-id systemctl reboot, mode "default"
  bindsym Ctrl+s exec --no-startup-id systemctl poweroff -i, mode "default"

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+BackSpace mode "$mode_system"

# Floating windows
# floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
# specify what apps should be floating window
for_window [class="feh"] floating enable

# Scratchpads
# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Make the telegram window scratchpad
for_window [class="TelegramDesktop"] floating enable
for_window [class="TelegramDesktop"] move scratchpad
# exec --no-startup-id "telegram-desktop"

# Show the telegram scratchpad window, if any.
bindsym $mod+t [class="TelegramDesktop"] scratchpad show

# Disable window titlebars & set border
for_window [class=".*"] border pixel 2
# Activate smart borders (always)
smart_borders on

# Enable gaps
gaps inner 8
gaps outer 16
# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer

# make an image screenshot
# bindsym $mod+Ctrl+s exec "maim -s | xclip -selection clipboard -t image/png"
bindsym $mod+Ctrl+s exec "flameshot gui"
bindsym Print exec "flameshot gui"

# Run apps on specific keybinding
bindsym $mod+b exec "firefox"
# bindsym $mod+t exec "telegram-desktop"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the windowâ€™s width.
  # Pressing right will grow the windowâ€™s width.
  # Pressing up will shrink the windowâ€™s height.
  # Pressing down will grow the windowâ€™s height.
  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize grow height 10 px or 10 ppt
  bindsym k resize shrink height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bindsym $mod+y resize shrink width 10 px or 10 ppt
bindsym $mod+u resize grow height 10 px or 10 ppt
bindsym $mod+i resize shrink height 10 px or 10 ppt
bindsym $mod+o resize grow width 10 px or 10 ppt

# Disable focus change on mouse movement
focus_follows_mouse no

# Start polybar to display a workspace bar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
